15112 Term ProjectXiang (Alvin) Shixiangs1
Section JDesign ReadmeThe project aims to program a 2D fighting game similar to the famous game ‘Street Fighter’ but of course with simplified graphics. The graphics of the game is realized using Tkinter. Thread and pyaudio are used to play to background music.Main FeaturesThere are several major challenges of this project, namely:1. Player Movements: Being a fighting game, movement is the very key to the quality of the project. The fighter has to be able to display various motions including but not limiting to jab, punch, kick, dodge and squat. In order to do that, all the characters belong to the same fighter class but each of them has different body parameters. According to the body parameters, the length of various body parts is calculated. Then, a system of lengths and angles is created to record the body movement. Each movement is described using various angles between different body parts. After that, the coordinateCalculator function is used to combine the length and angle data to calculated to coordinates of various joints (knee, elbow, shoulder) on the screen.
2. Player Graphics: After obtaining the coordinates of the various joints of the fighters, actual animations are added according to the coordinates and the moves of the fighter. All the pictures are obtained from the street fighter sprite sheet available online. I need to adjust the size of the picture, make their background transparent and convert the picture into gif format. Each motion is displayed by a series of pictures frame by frame. A motionTimer is used to control the animation.
3. Damage: Every time an attack movement is launched by a player, the Hit function is triggered. The hit function has to perform the following duties: A. Calculate whether the attack actually lands on the enemy. The calculation is realized mainly through two kinds of mechanism. The first kind of mechanism is to determine whether a point is within a circle. The second kind is to determine whether two line segments intersect with each other. B. Calculate how much damage the movement can cause. Different characters, different attack motions and different body parts hit all affect the amount of damage. C.Readjust the body coordinates of both the attacker and the victim to demonstrate the impact of the attack.
4. Combos: Fighting game with only simple movements is boring. They player has to be able to perform more advanced motions by using certain specific combinations of keys. It places a higher requirement on the movement tracker, movement timer and the graphics.
5. AI: The AI in this game has three levels. For the “dumbass” level, the AI will basically perform random motions based on a set of pre-installed parameters. Many of the moves do not make sense and make the AI appear dumb. For the “mediocre” level, the AI is aware of the distance between itself and its opponents. The AI fighter will make moves according to the distance. Besides, the AI will be aware of the incoming bombs and it will try to avoid the attack.  For the “insane”level, the AI is even more clever than the “mediocre”AI. The insane AI is able to learn from its opponent. There is a data center in this game which can be opened by clicking “1”during any fight. The AI will act according to the data to make its attack more effectively. For example, if the enemy likes to use bomb (Hadoken), the AI will try to move closer to its opponent, stopping it from launching bomb. If the enemy often uses the defend moves, the AI will launch more crouching kick which, although inflict less amount of damage, is the only defend which cannot be avoided by the “defend” move.
6. More Choices: The game allows its player to choose different stages, rounds, characters and difficulties. Due to the limited time, there are only two characters available in the game. If more time were given, more characters can be created.

7. Bombs: The bomb in this game is a class on its own. In the class, various functions are used to calculate whether the bomb hits the player, to decide whether what kinds of impact the bomb will inflict, to draw to different kinds of bombs and to draw the animations when the bomb is launched and when it explodes.

8. Multiplayer: The multiplayer feature allows users to play against each other on different platform. The function is realized with the help of socket and thread libraries.Interface:A lot of effort has been devoted into making the game nice and user-friendly. Some details include that different background pictures are chosen for various screens, shades are added to many titles and options to make the words look distinct from the background and the Arrow button lights up every time it is selected.User Feedback:During the user feedback session, a few constructive feedbacks were received and adjustments were made. These feedbacks include:1. The game will be more entertaining with music: In response to this, pyaudio and thread libraries are used to play the background music for the game.2. What will happen when the countdown clock reaches zero before any player dies: The user actually found a bug of this game. Supposedly, if nobody dies and the countdown clock reaches zero, the player with lower HP will lose the fight. Adjustments were made to fix this bug.3. The data panel should look nicer: After the user feedback session, I redesigned the data panel to make it more aesthetically appealing.